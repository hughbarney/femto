#!./run
# test the femto Lisp extensions
# leg20231213

tap 15

export FLISPRC=../lisp/core.lsp
# Note: nested requiring stopped working
femtolib(){ IN="(require 'femto) $IN" flisp_expr "$@"; }
femtolib() { IN="(require 'flisp) (require 'femto) $IN" flisp_expr "$@"; }
femtolib_err() { IN="(require 'femto) $IN" flisp_expr "$@"; }

true; ok load-script \# TODO
true; ok repeat \# TODO
IN="(repeat 0 +)" OUT=nil
femtolib 1; ok repeat-1 

true; ok shell-command \# TODO
true; ok shell-exec \# TODO
true; ok insert-file \# TODO

# string.trim.front
IN='(string.trim.front " x")'  OUT='"x"'
femtolib 1; ok string.trim.front-1 remove single space before string

IN='(string.trim.front " ")'  OUT='""'
femtolib 1; ok string.trim.front-2 remove single space
IN='(string.trim.front "    ")'  OUT='""'
femtolib 1; ok string.trim.front-3 remove several spaces
IN='(string.trim.front "")'  OUT='""'
femtolib 1; ok string.trim.front-4 empty string
# string.trim.back
IN='(string.trim.back "x ")'  OUT='"x"'
femtolib 1; ok string.strim.back-1 remove single space after string
IN='(string.trim.back " ")'  OUT='""'
femtolib 1; ok string.strim.back-2 remove single space
IN='(string.trim.back "    ")'  OUT='""'
femtolib 1; ok string.strim.back-3 remove several spaces
IN='(string.trim.back "")'  OUT='""'
femtolib 1; ok string.strim.back-4 empty string

# string.trim
IN='(string.trim " ")'  OUT='""'
femtolib 1; ok string.strim-1 remove single space

# delete-next-word
# delete-previous-word
# kill-to-eol
# shrink
# is_ctl_g
# is_escape
# is_backspace
# is_ctl_s
# is_control_char
# describe-key
# find_end_p
# find_start_p
# find_and_eval_sexp

true

# Local Variables:
# mode: sh
# End:
